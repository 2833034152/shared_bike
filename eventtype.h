#ifndef BRKS_COMMON_EVENT_TYPE_H
#define BRKS_COMMON_EVENT_TYPE_H

#include "glo_def.h"

typedef struct EErrorReason_           //根据错误代号找错误原因
{
	i32 code;
	const char* reason;
}EErrorReason;

//事件
enum EventID
{
	EVENTID_GET_MOBILE_CODE_REQ = 0X01,
	EVENTID_GET_MOBILE_CODE_RSP = 0X02,

	EVENTID_LOIGIN_REQ = 0X03,
	EVENTID_LOGIN_RSP = 0X04,

	EVENTID_RECHARGE_REQ = 0X05,
	EVENTID_RECHARGE_RSP = 0X06,

	EVENTID_GET_ACCOUNT_BALANCE_REQ = 0X07,
	EVENTID_ACCOUNT_BALANCE_RSP = 0X08,

	EVENTID_LIST_ACCOUNT_RECORDS_REQ = 0X09,
	EVENTID_ACCOUNT_RECORDS_RSP = 0X10,

	EVENTID_LIST_TRAVELS_REQ = 0X11,
	EVENTID_LIST_TRAVELS_RSP = 0X12,

	EVENTID_EXIT_RSP = 0XFE,      //事件退出响应  ,空的响应，什么都不需要做
	EVENTID_UNKNOW = 0XFF
};

//事件响应的错误代号
enum EErrorCode
{
	ERRC_SUCCESS = 200,
	ERRC_INVALID_MSG = 400,
	ERRC_INVAID_DATA = 404,
	ERRC_MTTHOD_NOT_ALLOWED = 406,
	ERRO_PROCESS_FAILED = 406,
	ERRO_BIKE_IS_TOOK = 407,
	ERRO_BIKE_IS_RUNNING = 408,
	ERRO_BIKE_IS_DAMAGED = 409,
	ERR_NULL = 0
};

const char* getReasonByErrorCode(i32  code);

#endif

